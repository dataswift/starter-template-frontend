{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = mergeRefs;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nfunction mergeRefs() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return function forwardRef(node) {\n    args.forEach(function (ref) {\n      if (ref == null) {\n        return;\n      }\n\n      if (typeof ref === 'function') {\n        ref(node);\n        return;\n      }\n\n      if (typeof ref === 'object') {\n        ref.current = node;\n        return;\n      }\n\n      console.error(\"mergeRefs cannot handle Refs of type boolean, number or string, received ref \" + String(ref));\n    });\n  };\n}\n\nmodule.exports = exports.default;","map":{"version":3,"names":["_interopRequireWildcard","require","default","exports","__esModule","mergeRefs","React","_len","arguments","length","args","Array","_key","forwardRef","node","forEach","ref","current","console","error","String","module"],"sources":["/home/jasoncruz98/Projects/react-native/starter-template-frontend/node_modules/react-native-web/dist/cjs/modules/mergeRefs/index.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = mergeRefs;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nfunction mergeRefs() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return function forwardRef(node) {\n    args.forEach(ref => {\n      if (ref == null) {\n        return;\n      }\n\n      if (typeof ref === 'function') {\n        ref(node);\n        return;\n      }\n\n      if (typeof ref === 'object') {\n        ref.current = node;\n        return;\n      }\n\n      console.error(\"mergeRefs cannot handle Refs of type boolean, number or string, received ref \" + String(ref));\n    });\n  };\n}\n\nmodule.exports = exports.default;"],"mappings":"AAAA;;AAEA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAAD,CAAP,CAAyDC,OAAvF;;AAEAC,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACD,OAAR,GAAkBG,SAAlB;;AAEA,IAAIC,KAAK,GAAGN,uBAAuB,CAACC,OAAO,CAAC,OAAD,CAAR,CAAnC;;AAUA,SAASI,SAAT,GAAqB;EACnB,KAAK,IAAIE,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAG,IAAIC,KAAJ,CAAUJ,IAAV,CAApC,EAAqDK,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGL,IAA3E,EAAiFK,IAAI,EAArF,EAAyF;IACvFF,IAAI,CAACE,IAAD,CAAJ,GAAaJ,SAAS,CAACI,IAAD,CAAtB;EACD;;EAED,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAA0B;IAC/BJ,IAAI,CAACK,OAAL,CAAa,UAAAC,GAAG,EAAI;MAClB,IAAIA,GAAG,IAAI,IAAX,EAAiB;QACf;MACD;;MAED,IAAI,OAAOA,GAAP,KAAe,UAAnB,EAA+B;QAC7BA,GAAG,CAACF,IAAD,CAAH;QACA;MACD;;MAED,IAAI,OAAOE,GAAP,KAAe,QAAnB,EAA6B;QAC3BA,GAAG,CAACC,OAAJ,GAAcH,IAAd;QACA;MACD;;MAEDI,OAAO,CAACC,KAAR,CAAc,kFAAkFC,MAAM,CAACJ,GAAD,CAAtG;IACD,CAhBD;EAiBD,CAlBD;AAmBD;;AAEDK,MAAM,CAAClB,OAAP,GAAiBA,OAAO,CAACD,OAAzB"},"metadata":{},"sourceType":"script"}