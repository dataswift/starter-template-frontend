{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = usePressEvents;\n\nvar _PressResponder = _interopRequireDefault(require(\"./PressResponder\"));\n\nvar _react = require(\"react\");\n\nfunction usePressEvents(hostRef, config) {\n  var pressResponderRef = (0, _react.useRef)(null);\n\n  if (pressResponderRef.current == null) {\n    pressResponderRef.current = new _PressResponder.default(config);\n  }\n\n  var pressResponder = pressResponderRef.current;\n  (0, _react.useEffect)(function () {\n    pressResponder.configure(config);\n  }, [config, pressResponder]);\n  (0, _react.useEffect)(function () {\n    return function () {\n      pressResponder.reset();\n    };\n  }, [pressResponder]);\n  (0, _react.useDebugValue)(config);\n  return pressResponder.getEventHandlers();\n}\n\nmodule.exports = exports.default;","map":{"version":3,"names":["_interopRequireDefault","require","default","exports","__esModule","usePressEvents","_PressResponder","_react","hostRef","config","pressResponderRef","useRef","current","pressResponder","useEffect","configure","reset","useDebugValue","getEventHandlers","module"],"sources":["/home/jasoncruz98/Projects/react-native/starter-template-frontend/node_modules/react-native-web/dist/cjs/modules/usePressEvents/index.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = usePressEvents;\n\nvar _PressResponder = _interopRequireDefault(require(\"./PressResponder\"));\n\nvar _react = require(\"react\");\n\nfunction usePressEvents(hostRef, config) {\n  var pressResponderRef = (0, _react.useRef)(null);\n\n  if (pressResponderRef.current == null) {\n    pressResponderRef.current = new _PressResponder.default(config);\n  }\n\n  var pressResponder = pressResponderRef.current; // Re-configure to use the current node and configuration.\n\n  (0, _react.useEffect)(() => {\n    pressResponder.configure(config);\n  }, [config, pressResponder]); // Reset the `pressResponder` when cleanup needs to occur. This is\n  // a separate effect because we do not want to rest the responder when `config` changes.\n\n  (0, _react.useEffect)(() => {\n    return () => {\n      pressResponder.reset();\n    };\n  }, [pressResponder]);\n  (0, _react.useDebugValue)(config);\n  return pressResponder.getEventHandlers();\n}\n\nmodule.exports = exports.default;"],"mappings":"AASA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAAP,CAAwDC,OAArF;;AAEAC,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACD,OAAR,GAAkBG,cAAlB;;AAEA,IAAIC,eAAe,GAAGN,sBAAsB,CAACC,OAAO,oBAAR,CAA5C;;AAEA,IAAIM,MAAM,GAAGN,OAAO,CAAC,OAAD,CAApB;;AAEA,SAASI,cAAT,CAAwBG,OAAxB,EAAiCC,MAAjC,EAAyC;EACvC,IAAIC,iBAAiB,GAAG,CAAC,GAAGH,MAAM,CAACI,MAAX,EAAmB,IAAnB,CAAxB;;EAEA,IAAID,iBAAiB,CAACE,OAAlB,IAA6B,IAAjC,EAAuC;IACrCF,iBAAiB,CAACE,OAAlB,GAA4B,IAAIN,eAAe,CAACJ,OAApB,CAA4BO,MAA5B,CAA5B;EACD;;EAED,IAAII,cAAc,GAAGH,iBAAiB,CAACE,OAAvC;EAEA,CAAC,GAAGL,MAAM,CAACO,SAAX,EAAsB,YAAM;IAC1BD,cAAc,CAACE,SAAf,CAAyBN,MAAzB;EACD,CAFD,EAEG,CAACA,MAAD,EAASI,cAAT,CAFH;EAKA,CAAC,GAAGN,MAAM,CAACO,SAAX,EAAsB,YAAM;IAC1B,OAAO,YAAM;MACXD,cAAc,CAACG,KAAf;IACD,CAFD;EAGD,CAJD,EAIG,CAACH,cAAD,CAJH;EAKA,CAAC,GAAGN,MAAM,CAACU,aAAX,EAA0BR,MAA1B;EACA,OAAOI,cAAc,CAACK,gBAAf,EAAP;AACD;;AAEDC,MAAM,CAAChB,OAAP,GAAiBA,OAAO,CAACD,OAAzB"},"metadata":{},"sourceType":"script"}