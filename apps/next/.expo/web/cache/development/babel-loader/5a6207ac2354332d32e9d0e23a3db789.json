{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = useWindowDimensions;\n\nvar _Dimensions = _interopRequireDefault(require(\"../Dimensions\"));\n\nvar _react = require(\"react\");\n\nfunction useWindowDimensions() {\n  var _useState = (0, _react.useState)(function () {\n    return _Dimensions.default.get('window');\n  }),\n      dims = _useState[0],\n      setDims = _useState[1];\n\n  (0, _react.useEffect)(function () {\n    function handleChange(_ref) {\n      var window = _ref.window;\n\n      if (window != null) {\n        setDims(window);\n      }\n    }\n\n    _Dimensions.default.addEventListener('change', handleChange);\n\n    setDims(_Dimensions.default.get('window'));\n    return function () {\n      _Dimensions.default.removeEventListener('change', handleChange);\n    };\n  }, []);\n  return dims;\n}\n\nmodule.exports = exports.default;","map":{"version":3,"names":["_interopRequireDefault","require","default","exports","__esModule","useWindowDimensions","_Dimensions","_react","_useState","useState","get","dims","setDims","useEffect","handleChange","_ref","window","addEventListener","removeEventListener","module"],"sources":["/home/jasoncruz98/Projects/react-native/starter-template-frontend/node_modules/react-native-web/dist/cjs/exports/useWindowDimensions/index.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = useWindowDimensions;\n\nvar _Dimensions = _interopRequireDefault(require(\"../Dimensions\"));\n\nvar _react = require(\"react\");\n\nfunction useWindowDimensions() {\n  var _useState = (0, _react.useState)(() => _Dimensions.default.get('window')),\n      dims = _useState[0],\n      setDims = _useState[1];\n\n  (0, _react.useEffect)(() => {\n    function handleChange(_ref) {\n      var window = _ref.window;\n\n      if (window != null) {\n        setDims(window);\n      }\n    }\n\n    _Dimensions.default.addEventListener('change', handleChange); // We might have missed an update between calling `get` in render and\n    // `addEventListener` in this handler, so we set it here. If there was\n    // no change, React will filter out this update as a no-op.\n\n\n    setDims(_Dimensions.default.get('window'));\n    return () => {\n      _Dimensions.default.removeEventListener('change', handleChange);\n    };\n  }, []);\n  return dims;\n}\n\nmodule.exports = exports.default;"],"mappings":"AASA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAAP,CAAwDC,OAArF;;AAEAC,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACD,OAAR,GAAkBG,mBAAlB;;AAEA,IAAIC,WAAW,GAAGN,sBAAsB,CAACC,OAAO,iBAAR,CAAxC;;AAEA,IAAIM,MAAM,GAAGN,OAAO,CAAC,OAAD,CAApB;;AAEA,SAASI,mBAAT,GAA+B;EAC7B,IAAIG,SAAS,GAAG,CAAC,GAAGD,MAAM,CAACE,QAAX,EAAqB;IAAA,OAAMH,WAAW,CAACJ,OAAZ,CAAoBQ,GAApB,CAAwB,QAAxB,CAAN;EAAA,CAArB,CAAhB;EAAA,IACIC,IAAI,GAAGH,SAAS,CAAC,CAAD,CADpB;EAAA,IAEII,OAAO,GAAGJ,SAAS,CAAC,CAAD,CAFvB;;EAIA,CAAC,GAAGD,MAAM,CAACM,SAAX,EAAsB,YAAM;IAC1B,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;MAC1B,IAAIC,MAAM,GAAGD,IAAI,CAACC,MAAlB;;MAEA,IAAIA,MAAM,IAAI,IAAd,EAAoB;QAClBJ,OAAO,CAACI,MAAD,CAAP;MACD;IACF;;IAEDV,WAAW,CAACJ,OAAZ,CAAoBe,gBAApB,CAAqC,QAArC,EAA+CH,YAA/C;;IAKAF,OAAO,CAACN,WAAW,CAACJ,OAAZ,CAAoBQ,GAApB,CAAwB,QAAxB,CAAD,CAAP;IACA,OAAO,YAAM;MACXJ,WAAW,CAACJ,OAAZ,CAAoBgB,mBAApB,CAAwC,QAAxC,EAAkDJ,YAAlD;IACD,CAFD;EAGD,CAlBD,EAkBG,EAlBH;EAmBA,OAAOH,IAAP;AACD;;AAEDQ,MAAM,CAAChB,OAAP,GAAiBA,OAAO,CAACD,OAAzB"},"metadata":{},"sourceType":"script"}