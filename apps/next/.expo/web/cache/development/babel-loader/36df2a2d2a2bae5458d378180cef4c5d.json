{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _Dimensions = _interopRequireDefault(require(\"../Dimensions\"));\n\nvar _canUseDom = _interopRequireDefault(require(\"../../modules/canUseDom\"));\n\nvar DeviceInfo = {\n  Dimensions: {\n    get windowPhysicalPixels() {\n      var _Dimensions$get = _Dimensions.default.get('window'),\n          width = _Dimensions$get.width,\n          height = _Dimensions$get.height,\n          fontScale = _Dimensions$get.fontScale,\n          scale = _Dimensions$get.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale: scale,\n        fontScale: fontScale\n      };\n    },\n\n    get screenPhysicalPixels() {\n      var _Dimensions$get2 = _Dimensions.default.get('screen'),\n          width = _Dimensions$get2.width,\n          height = _Dimensions$get2.height,\n          fontScale = _Dimensions$get2.fontScale,\n          scale = _Dimensions$get2.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale: scale,\n        fontScale: fontScale\n      };\n    }\n\n  },\n\n  get locale() {\n    if (_canUseDom.default) {\n      if (navigator.languages) {\n        return navigator.languages[0];\n      } else {\n        return navigator.language;\n      }\n    }\n  },\n\n  get totalMemory() {\n    return _canUseDom.default ? navigator.deviceMemory : undefined;\n  },\n\n  get userAgent() {\n    return _canUseDom.default ? navigator.userAgent : '';\n  }\n\n};\nvar _default = DeviceInfo;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["_interopRequireDefault","require","default","exports","__esModule","_Dimensions","_canUseDom","DeviceInfo","Dimensions","windowPhysicalPixels","_Dimensions$get","get","width","height","fontScale","scale","screenPhysicalPixels","_Dimensions$get2","locale","navigator","languages","language","totalMemory","deviceMemory","undefined","userAgent","_default","module"],"sources":["/home/jasoncruz98/Projects/react-native/starter-template-frontend/node_modules/react-native-web/dist/cjs/exports/DeviceInfo/index.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _Dimensions = _interopRequireDefault(require(\"../Dimensions\"));\n\nvar _canUseDom = _interopRequireDefault(require(\"../../modules/canUseDom\"));\n\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar DeviceInfo = {\n  Dimensions: {\n    get windowPhysicalPixels() {\n      var _Dimensions$get = _Dimensions.default.get('window'),\n          width = _Dimensions$get.width,\n          height = _Dimensions$get.height,\n          fontScale = _Dimensions$get.fontScale,\n          scale = _Dimensions$get.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale,\n        fontScale\n      };\n    },\n\n    get screenPhysicalPixels() {\n      var _Dimensions$get2 = _Dimensions.default.get('screen'),\n          width = _Dimensions$get2.width,\n          height = _Dimensions$get2.height,\n          fontScale = _Dimensions$get2.fontScale,\n          scale = _Dimensions$get2.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale,\n        fontScale\n      };\n    }\n\n  },\n\n  get locale() {\n    if (_canUseDom.default) {\n      if (navigator.languages) {\n        return navigator.languages[0];\n      } else {\n        return navigator.language;\n      }\n    }\n  },\n\n  get totalMemory() {\n    // $FlowIssue deviceMemory not defined in navigator\n    return _canUseDom.default ? navigator.deviceMemory : undefined;\n  },\n\n  get userAgent() {\n    return _canUseDom.default ? navigator.userAgent : '';\n  }\n\n};\nvar _default = DeviceInfo;\nexports.default = _default;\nmodule.exports = exports.default;"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAAP,CAAwDC,OAArF;;AAEAC,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACD,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIG,WAAW,GAAGL,sBAAsB,CAACC,OAAO,iBAAR,CAAxC;;AAEA,IAAIK,UAAU,GAAGN,sBAAsB,CAACC,OAAO,2BAAR,CAAvC;;AAUA,IAAIM,UAAU,GAAG;EACfC,UAAU,EAAE;IACV,IAAIC,oBAAJ,GAA2B;MACzB,IAAIC,eAAe,GAAGL,WAAW,CAACH,OAAZ,CAAoBS,GAApB,CAAwB,QAAxB,CAAtB;MAAA,IACIC,KAAK,GAAGF,eAAe,CAACE,KAD5B;MAAA,IAEIC,MAAM,GAAGH,eAAe,CAACG,MAF7B;MAAA,IAGIC,SAAS,GAAGJ,eAAe,CAACI,SAHhC;MAAA,IAIIC,KAAK,GAAGL,eAAe,CAACK,KAJ5B;;MAMA,OAAO;QACLH,KAAK,EAAEA,KAAK,GAAGG,KADV;QAELF,MAAM,EAAEA,MAAM,GAAGE,KAFZ;QAGLA,KAAK,EAALA,KAHK;QAILD,SAAS,EAATA;MAJK,CAAP;IAMD,CAdS;;IAgBV,IAAIE,oBAAJ,GAA2B;MACzB,IAAIC,gBAAgB,GAAGZ,WAAW,CAACH,OAAZ,CAAoBS,GAApB,CAAwB,QAAxB,CAAvB;MAAA,IACIC,KAAK,GAAGK,gBAAgB,CAACL,KAD7B;MAAA,IAEIC,MAAM,GAAGI,gBAAgB,CAACJ,MAF9B;MAAA,IAGIC,SAAS,GAAGG,gBAAgB,CAACH,SAHjC;MAAA,IAIIC,KAAK,GAAGE,gBAAgB,CAACF,KAJ7B;;MAMA,OAAO;QACLH,KAAK,EAAEA,KAAK,GAAGG,KADV;QAELF,MAAM,EAAEA,MAAM,GAAGE,KAFZ;QAGLA,KAAK,EAALA,KAHK;QAILD,SAAS,EAATA;MAJK,CAAP;IAMD;;EA7BS,CADG;;EAkCf,IAAII,MAAJ,GAAa;IACX,IAAIZ,UAAU,CAACJ,OAAf,EAAwB;MACtB,IAAIiB,SAAS,CAACC,SAAd,EAAyB;QACvB,OAAOD,SAAS,CAACC,SAAV,CAAoB,CAApB,CAAP;MACD,CAFD,MAEO;QACL,OAAOD,SAAS,CAACE,QAAjB;MACD;IACF;EACF,CA1Cc;;EA4Cf,IAAIC,WAAJ,GAAkB;IAEhB,OAAOhB,UAAU,CAACJ,OAAX,GAAqBiB,SAAS,CAACI,YAA/B,GAA8CC,SAArD;EACD,CA/Cc;;EAiDf,IAAIC,SAAJ,GAAgB;IACd,OAAOnB,UAAU,CAACJ,OAAX,GAAqBiB,SAAS,CAACM,SAA/B,GAA2C,EAAlD;EACD;;AAnDc,CAAjB;AAsDA,IAAIC,QAAQ,GAAGnB,UAAf;AACAJ,OAAO,CAACD,OAAR,GAAkBwB,QAAlB;AACAC,MAAM,CAACxB,OAAP,GAAiBA,OAAO,CAACD,OAAzB"},"metadata":{},"sourceType":"script"}